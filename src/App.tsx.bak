import React from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';
import { Toaster } from 'sonner';
import { AuthProvider } from './context/AuthContext';
import MainLayout from './components/MainLayout';

// Import pages
import Dashboard from './pages/Dashboard';
import PricingPage from './pages/PricingPage';
import RoiShortTermPage from './pages/RoiShortTermPage';
import TomROIPage from './pages/TomROIPage';
import TomROIHistoryPage from './pages/TomROIHistoryPage';
import TomROIDetailPage from './pages/TomROIDetailPage';
import RoiCalculator from './components/roi/RoiCalculator';
import AuthPage from './pages/AuthPage';
import ProtectedRoute from './components/ProtectedRoute';
import HomePage from './pages/HomePage';
import ToolsPage from './pages/ToolsPage';
import ChatPage from './pages/ChatPage';
import TomROIAnalyzer from './components/tom-roi/TomROIAnalyzer';
import AcademyPage from './pages/AcademyPage';
import FinanceiroPage from './pages/FinanceiroPage';
// Importando a ferramenta de diagnóstico
import { DiagnosticTool } from './components/tom-roi/diagnostic';

// This Navbar component will only be shown on the login page
const Navbar = () => (
  <header className="bg-white shadow-sm">
    <div className="container mx-auto px-4 py-3">
      <div className="flex justify-between items-center">
        <div className="font-bold text-lg text-arca-blue">ROI Analyzer</div>
        <nav className="flex space-x-4">
          <a href="/" className="text-gray-700 hover:text-arca-blue">Home</a>
          <a href="/analise/tom" className="text-gray-700 hover:text-arca-blue">Analisar ROI</a>
          <a href="/meus-rois" className="text-gray-700 hover:text-arca-blue">Meus ROIs</a>
        </nav>
      </div>
    </div>
  </header>
);

// AppContent component to conditionally render Navbar or MainLayout
const AppContent = () => {
  const location = useLocation();
  const isAuthPage = location.pathname === '/login';
  
  if (isAuthPage) {
    return (
      <div className="min-h-screen">
        <Routes>
          <Route path="/login" element={<AuthPage />} />
        </Routes>
      </div>
    );
  }
  
  return (
    <Routes>
      <Route path="/" element={<ProtectedRoute><MainLayout /></ProtectedRoute>}>
        <Route index element={<HomePage />} />
        <Route path="pricing" element={<PricingPage />} />
        <Route path="ferramentas" element={<ToolsPage />} />
        <Route path="chat" element={<ChatPage />} />
        <Route path="analise/curto-prazo" element={<RoiShortTermPage />} />
        <Route path="analise/tom" element={<TomROIPage />} />
        <Route path="analise/tom/:id" element={<TomROIDetailPage />} />
        <Route path="meus-rois" element={<TomROIHistoryPage />} />
        <Route path="calculadora-roi" element={<RoiCalculator />} />
        <Route path="academy" element={<ProtectedRoute><AcademyPage /></ProtectedRoute>} />
import React from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate, useLocation } from 'react-router-dom';
import { Toaster } from 'sonner';
import { AuthProvider } from './context/AuthContext';
import MainLayout from './components/MainLayout';

// Import pages
import Dashboard from './pages/Dashboard';
import PricingPage from './pages/PricingPage';
import RoiShortTermPage from './pages/RoiShortTermPage';
import TomROIPage from './pages/TomROIPage';
import TomROIHistoryPage from './pages/TomROIHistoryPage';
import TomROIDetailPage from './pages/TomROIDetailPage';
import RoiCalculator from './components/roi/RoiCalculator';
import AuthPage from './pages/AuthPage';
import ProtectedRoute from './components/ProtectedRoute';
import HomePage from './pages/HomePage';
import ToolsPage from './pages/ToolsPage';
import ChatPage from './pages/ChatPage';
import TomROIAnalyzer from './components/tom-roi/TomROIAnalyzer';
import AcademyPage from './pages/AcademyPage';
import FinanceiroPage from './pages/FinanceiroPage';
// Importando a ferramenta de diagnóstico
import { DiagnosticTool } from './components/tom-roi/diagnostic';

// This Navbar component will only be shown on the login page
const Navbar = () => (
  <header className="bg-white shadow-sm">
    <div className="container mx-auto px-4 py-3">
      <div className="flex justify-between items-center">
        <div className="font-bold text-lg text-arca-blue">ROI Analyzer</div>
        <nav className="flex space-x-4">
          <a href="/" className="text-gray-700 hover:text-arca-blue">Home</a>
          <a href="/analise/tom" className="text-gray-700 hover:text-arca-blue">Analisar ROI</a>
          <a href="/meus-rois" className="text-gray-700 hover:text-arca-blue">Meus ROIs</a>
        </nav>
      </div>
    </div>
  </header>
);

// AppContent component to conditionally render Navbar or MainLayout
const AppContent = () => {
  const location = useLocation();
  const isAuthPage = location.pathname === '/login';
  
  if (isAuthPage) {
    return (
      <div className="min-h-screen">
        <Routes>
          <Route path="/login" element={<AuthPage />} />
        </Routes>
      </div>
    );
  }
  
  return (
    <Routes>
      <Route path="/" element={<ProtectedRoute><MainLayout /></ProtectedRoute>}>
        <Route index element={<HomePage />} />
        <Route path="pricing" element={<PricingPage />} />
        <Route path="ferramentas" element={<ToolsPage />} />
        <Route path="chat" element={<ChatPage />} />
        <Route path="analise/curto-prazo" element={<RoiShortTermPage />} />
        <Route path="analise/tom" element={<TomROIPage />} />
        <Route path="analise/tom/:id" element={<TomROIDetailPage />} />
        <Route path="meus-rois" element={<TomROIHistoryPage />} />
        <Route path="calculadora-roi" element={<RoiCalculator />} />
        <Route path="academy" element={<ProtectedRoute><AcademyPage /></ProtectedRoute>} />
        <Route path="financeiro" element={<ProtectedRoute><FinanceiroPage /></ProtectedRoute>} />
      </Route>
    </Routes>
  );
};

function App() {
  return (
    <AuthProvider>
      <Toaster position="top-right" richColors closeButton />
      <Router>
        <AppContent />
      </Router>
    </AuthProvider>
  );
}

export default App;
